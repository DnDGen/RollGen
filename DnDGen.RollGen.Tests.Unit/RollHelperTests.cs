using NUnit.Framework;

namespace DnDGen.RollGen.Tests.Unit
{
    [TestFixture]
    public class RollHelperTests
    {
        [TestCase(-2, -2, "-2")]
        [TestCase(-2, -1, "1d2-3")]
        [TestCase(-2, 0, "1d3-3")]
        [TestCase(-2, 2, "2d3-4")]
        [TestCase(-2, 3, "1d6-3")]
        [TestCase(-1, -1, "-1")]
        [TestCase(-1, 0, "1d2-2")]
        [TestCase(-1, 1, "1d3-2")]
        [TestCase(-1, 3, "2d3-3")]
        [TestCase(-1, 4, "1d6-2")]
        [TestCase(0, 0, "0")]
        [TestCase(0, 1, "1d2-1")]
        [TestCase(0, 2, "1d3-1")]
        [TestCase(0, 4, "2d3-2")]
        [TestCase(0, 5, "1d6-1")]
        [TestCase(1, 1, "1")]
        [TestCase(1, 2, "1d2")]
        [TestCase(1, 3, "1d3")]
        [TestCase(1, 4, "1d4")]
        [TestCase(1, 5, "2d3-1")]
        [TestCase(1, 6, "1d6")]
        [TestCase(1, 7, "2d4-1")]
        [TestCase(1, 8, "1d8")]
        [TestCase(1, 9, "4d3-3")]
        [TestCase(1, 10, "1d10")]
        [TestCase(1, 11, "2d6-1")]
        [TestCase(1, 12, "1d12")]
        [TestCase(1, 20, "1d20")]
        [TestCase(1, 100, "1d100")]
        [TestCase(2, 2, "2")]
        [TestCase(2, 3, "1d2+1")]
        [TestCase(2, 4, "1d3+1")]
        [TestCase(2, 5, "1d4+1")]
        [TestCase(2, 6, "2d3")]
        [TestCase(2, 7, "1d6+1")]
        [TestCase(2, 8, "2d4")]
        [TestCase(2, 10, "4d3-2")]
        [TestCase(2, 12, "2d6")]
        [TestCase(2, 13, "1d12+1")]
        [TestCase(2, 15, "1d12+1d3")]
        [TestCase(2, 20, "2d10")]
        [TestCase(2, 24, "2d12")]
        [TestCase(2, 40, "2d20")]
        [TestCase(2, 200, "2d100")]
        [TestCase(3, 3, "3")]
        [TestCase(3, 4, "1d2+2")]
        [TestCase(3, 5, "1d3+2")]
        [TestCase(3, 6, "1d4+2")]
        [TestCase(3, 8, "1d6+2")]
        [TestCase(3, 9, "2d4+1")]
        [TestCase(3, 10, "1d8+2")]
        [TestCase(3, 12, "1d10+2")]
        [TestCase(3, 13, "2d6+1")]
        [TestCase(3, 18, "3d6")]
        [TestCase(3, 20, "1d12+2d4")]
        [TestCase(3, 24, "3d8")]
        [TestCase(3, 28, "5d6-2")]
        [TestCase(3, 30, "3d10")]
        [TestCase(3, 36, "3d12")]
        [TestCase(4, 4, "4")]
        [TestCase(4, 5, "1d2+3")]
        [TestCase(4, 6, "1d3+3")]
        [TestCase(4, 7, "1d4+3")]
        [TestCase(4, 8, "2d3+2")]
        [TestCase(4, 9, "1d6+3")]
        [TestCase(4, 10, "2d4+2")]
        [TestCase(4, 12, "4d3")]
        [TestCase(4, 16, "4d4")]
        [TestCase(4, 24, "4d6")]
        [TestCase(4, 32, "4d8")]
        [TestCase(4, 40, "4d10")]
        [TestCase(4, 48, "4d12")]
        [TestCase(5, 5, "5")]
        [TestCase(5, 8, "1d4+4")]
        [TestCase(5, 9, "2d3+3")]
        [TestCase(5, 10, "1d6+4")]
        [TestCase(5, 12, "1d8+4")]
        [TestCase(5, 13, "4d3+1")]
        [TestCase(5, 14, "1d10+4")]
        [TestCase(5, 16, "1d12+4")]
        [TestCase(5, 18, "1d12+1d3+3")]
        [TestCase(5, 20, "3d6+2")]
        [TestCase(5, 30, "5d6")]
        [TestCase(5, 40, "5d8")]
        [TestCase(5, 50, "5d10")]
        [TestCase(5, 60, "5d12")]
        [TestCase(6, 6, "6")]
        [TestCase(6, 7, "1d2+5")]
        [TestCase(6, 8, "1d3+5")]
        [TestCase(6, 9, "1d4+5")]
        [TestCase(6, 10, "2d3+4")]
        [TestCase(6, 11, "1d6+5")]
        [TestCase(6, 13, "1d8+5")]
        [TestCase(6, 15, "1d10+5")]
        [TestCase(6, 18, "4d4+2")]
        [TestCase(6, 20, "2d8+4")]
        [TestCase(6, 24, "2d10+4")]
        [TestCase(6, 30, "8d4-2")]
        [TestCase(6, 36, "6d6")]
        [TestCase(6, 45, "13d4-7")]
        [TestCase(7, 7, "7")]
        [TestCase(7, 10, "1d4+6")]
        [TestCase(7, 11, "2d3+5")]
        [TestCase(7, 12, "1d6+6")]
        [TestCase(7, 16, "1d10+6")]
        [TestCase(7, 18, "1d12+6")]
        [TestCase(7, 30, "1d20+2d3+4")]
        [TestCase(7, 42, "5d8+2")]
        [TestCase(7, 50, "2d20+1d6+4")]
        [TestCase(8, 8, "8")]
        [TestCase(8, 9, "1d2+7")]
        [TestCase(8, 18, "2d6+6")]
        [TestCase(8, 16, "4d3+4")]
        [TestCase(9, 9, "9")]
        [TestCase(9, 14, "1d6+8")]
        [TestCase(9, 16, "1d8+8")]
        [TestCase(9, 30, "3d8+6")]
        [TestCase(10, 10, "10")]
        [TestCase(10, 11, "1d2+9")]
        [TestCase(10, 20, "2d6+8")]
        [TestCase(10, 24, "2d8+8")]
        [TestCase(10, 40, "6d6+4")]
        [TestCase(10, 50, "8d6+2")]
        [TestCase(10, 60, "10d6")]
        [TestCase(10, 80, "10d8")]
        [TestCase(10, 100, "10d10")]
        [TestCase(10, 120, "10d12")]
        [TestCase(11, 11, "11")]
        [TestCase(11, 20, "1d10+10")]
        [TestCase(11, 40, "1d20+2d6+8")]
        [TestCase(12, 12, "12")]
        [TestCase(12, 13, "1d2+11")]
        [TestCase(12, 22, "2d6+10")]
        [TestCase(12, 24, "4d4+8")]
        [TestCase(12, 30, "2d10+10")]
        [TestCase(13, 13, "13")]
        [TestCase(14, 14, "14")]
        [TestCase(14, 15, "1d2+13")]
        [TestCase(15, 15, "15")]
        [TestCase(15, 30, "3d6+12")]
        [TestCase(15, 50, "5d8+10")]
        [TestCase(15, 150, "15d10")]
        [TestCase(16, 16, "16")]
        [TestCase(16, 17, "1d2+15")]
        [TestCase(17, 17, "17")]
        [TestCase(18, 18, "18")]
        [TestCase(18, 19, "1d2+17")]
        [TestCase(18, 72, "6d10+12")]
        [TestCase(19, 19, "19")]
        [TestCase(20, 20, "20")]
        [TestCase(20, 50, "6d6+14")]
        [TestCase(20, 80, "12d6+8")]
        [TestCase(20, 150, "26d6-6")]
        [TestCase(20, 160, "20d8")]
        [TestCase(20, 200, "20d10")]
        [TestCase(20, 240, "20d12")]
        [TestCase(21, 30, "1d10+20")]
        [TestCase(21, 40, "1d20+20")]
        [TestCase(30, 50, "4d6+26")]
        [TestCase(30, 60, "6d6+24")]
        [TestCase(30, 100, "10d8+20")]
        [TestCase(30, 120, "10d10+20")]
        [TestCase(30, 180, "30d6")]
        [TestCase(30, 240, "30d8")]
        [TestCase(30, 300, "30d10")]
        [TestCase(30, 360, "30d12")]
        [TestCase(40, 160, "24d6+16")]
        [TestCase(40, 240, "2d100+1d3+37")]
        [TestCase(40, 320, "40d8")]
        [TestCase(40, 400, "40d10")]
        [TestCase(40, 480, "40d12")]
        [TestCase(50, 200, "30d6+20")]
        [TestCase(50, 300, "13d20+1d4+36")]
        [TestCase(45, 150, "15d8+30")]
        [TestCase(60, 240, "20d10+40")]
        [TestCase(60, 360, "3d100+1d4+56")]
        [TestCase(70, 160, "10d10+60")]
        [TestCase(70, 420, "18d20+4d3+48")]
        [TestCase(100, 400, "3d100+1d4+96")]
        [TestCase(100, 600, "5d100+1d6+94")]
        [TestCase(100, 800, "7d100+1d8+92")]
        [TestCase(100, 1000, "9d100+1d10+90")]
        [TestCase(100, 1200, "11d100+1d12+88")]
        [TestCase(200, 800, "6d100+2d4+192")]
        [TestCase(200, 1200, "10d100+2d6+188")]
        [TestCase(200, 1600, "14d100+2d8+184")]
        [TestCase(200, 2000, "18d100+2d10+180")]
        [TestCase(300, 1200, "9d100+1d10+290")]
        [TestCase(300, 1800, "15d100+3d6+282")]
        [TestCase(300, 2400, "21d100+3d8+276")]
        [TestCase(300, 3000, "27d100+3d10+270")]
        [TestCase(300, 3600, "33d100+3d12+264")]
        [TestCase(400, 1600, "12d100+4d4+384")]
        [TestCase(400, 2400, "20d100+4d6+376")]
        [TestCase(400, 3200, "28d100+4d8+368")]
        [TestCase(400, 4000, "36d100+4d10+360")]
        [TestCase(400, 4800, "44d100+4d12+352")]
        [TestCase(500, 2000, "15d100+3d6+482")]
        [TestCase(500, 3000, "25d100+5d6+470")]
        [TestCase(600, 2400, "18d100+2d10+580")]
        [TestCase(600, 3600, "30d100+6d6+564")]
        [TestCase(700, 4200, "35d100+5d8+660")]
        [TestCase(1000, 4000, "30d100+6d6+964")]
        [TestCase(1000, 6000, "50d100+10d6+940")]
        [TestCase(1000, 8000, "70d100+10d8+920")]
        [TestCase(1000, 10_000, "90d100+10d10+900")]
        [TestCase(1000, 12_000, "111d100+1d12+888")]
        [TestCase(2000, 8000, "60d100+12d6+1928")]
        [TestCase(2000, 12_000, "101d100+1d2+1898")]
        [TestCase(2000, 16_000, "141d100+2d20+1d4+1856")]
        [TestCase(2000, 20_000, "181d100+9d10+1810")]
        [TestCase(3000, 12_000, "90d100+10d10+2900")]
        [TestCase(3000, 18_000, "151d100+17d4+2832")]
        [TestCase(3000, 24_000, "212d100+4d4+2784")]
        [TestCase(3000, 30_000, "272d100+8d10+2720")]
        [TestCase(3000, 36_000, "333d100+3d12+2664")]
        [TestCase(4000, 16_000, "121d100+3d8+3876")]
        [TestCase(4000, 24_000, "202d100+1d3+3797")]
        [TestCase(4000, 32_000, "282d100+4d20+2d4+3712")]
        [TestCase(4000, 40_000, "363d100+7d10+3630")]
        [TestCase(4000, 48_000, "444d100+4d12+3552")]
        [TestCase(5000, 20_000, "151d100+17d4+4832")]
        [TestCase(5000, 30_000, "252d100+2d20+2d8+4744")]
        [TestCase(6000, 24_000, "181d100+9d10+5810")]
        [TestCase(6000, 36_000, "303d100+1d4+5696")]
        [TestCase(7000, 42_000, "353d100+4d12+1d10+6642")]
        [TestCase(10_000, 40_000, "303d100+1d4+9696")]
        [TestCase(10_000, 60_000, "505d100+1d6+9494")]
        [TestCase(10_000, 80_000, "707d100+1d8+9292")]
        [TestCase(10_000, 100_000, "909d100+1d10+9090")]
        [TestCase(10_000, 120_000, "1111d100+1d12+8888")]
        [TestCase(20_000, 80_000, "606d100+2d4+19392")]
        [TestCase(20_000, 120_000, "1010d100+2d6+18988")]
        [TestCase(20_000, 160_000, "1414d100+2d8+18584")]
        [TestCase(20_000, 200_000, "1818d100+2d10+18180")]
        [TestCase(30_000, 120_000, "909d100+1d10+29090")]
        [TestCase(30_000, 180_000, "1515d100+3d6+28482")]
        [TestCase(30_000, 240_000, "2121d100+3d8+27876")]
        [TestCase(30_000, 300_000, "2727d100+3d10+27270")]
        [TestCase(30_000, 360_000, "3333d100+3d12+26664")]
        [TestCase(40_000, 160_000, "1212d100+4d4+38784")]
        [TestCase(40_000, 240_000, "2020d100+4d6+37976")]
        [TestCase(40_000, 320_000, "2828d100+4d8+37168")]
        [TestCase(40_000, 400_000, "3636d100+4d10+36360")]
        [TestCase(40_000, 480_000, "4444d100+4d12+35552")]
        [TestCase(50_000, 200_000, "1515d100+3d6+48482")]
        [TestCase(50_000, 300_000, "2525d100+5d6+47470")]
        [TestCase(60_000, 240_000, "1818d100+2d10+58180")]
        [TestCase(60_000, 360_000, "3030d100+6d6+56964")]
        [TestCase(70_000, 420_000, "3535d100+5d8+66460")]
        public void Roll(int lower, int upper, string expectedRoll)
        {
            var roll = RollHelper.GetRoll(lower, upper);
            Assert.That(roll, Is.EqualTo(expectedRoll));
        }

        [TestCase(1, 2, 2, "1")]
        [TestCase(6, 7, 9, "1d3")]
        [TestCase(6, 8, 10, "1d3+1")]
        [TestCase(6, 10, 18, "4d3")]
        [TestCase(9, 14, 27, "1d12+1d3+3")]
        [TestCase(9, 15, 27, "4d4+2")]
        [TestCase(12, 19, 36, "1d12+2d4+4")]
        [TestCase(15, 22, 45, "1d20+2d3+4")]
        public void Roll(int baseAmount, int lower, int upper, string expectedRoll)
        {
            var roll = RollHelper.GetRoll(baseAmount, lower, upper);
            Assert.That(roll, Is.EqualTo(expectedRoll));
        }

        [TestCase(0, 1)]
        [TestCase(0, 2)]
        [TestCase(0, 4)]
        [TestCase(0, 5)]
        [TestCase(1, 1)]
        [TestCase(1, 2)]
        [TestCase(1, 3)]
        [TestCase(1, 4)]
        [TestCase(1, 5)]
        [TestCase(1, 6)]
        [TestCase(1, 7)]
        [TestCase(1, 8)]
        [TestCase(1, 9)]
        [TestCase(1, 10)]
        [TestCase(1, 11)]
        [TestCase(1, 12)]
        [TestCase(2, 2)]
        [TestCase(2, 3)]
        [TestCase(2, 4)]
        [TestCase(2, 5)]
        [TestCase(2, 6)]
        [TestCase(2, 7)]
        [TestCase(2, 8)]
        [TestCase(2, 10)]
        [TestCase(2, 12)]
        [TestCase(2, 15)]
        [TestCase(2, 13)]
        [TestCase(2, 20)]
        [TestCase(3, 3)]
        [TestCase(3, 4)]
        [TestCase(3, 5)]
        [TestCase(3, 6)]
        [TestCase(3, 8)]
        [TestCase(3, 9)]
        [TestCase(3, 10)]
        [TestCase(3, 12)]
        [TestCase(3, 13)]
        [TestCase(3, 18)]
        [TestCase(3, 20)]
        [TestCase(3, 28)]
        [TestCase(4, 4)]
        [TestCase(4, 5)]
        [TestCase(4, 6)]
        [TestCase(4, 7)]
        [TestCase(4, 8)]
        [TestCase(4, 9)]
        [TestCase(4, 10)]
        [TestCase(4, 12)]
        [TestCase(4, 16)]
        [TestCase(4, 32)]
        [TestCase(5, 5)]
        [TestCase(5, 8)]
        [TestCase(5, 9)]
        [TestCase(5, 10)]
        [TestCase(5, 12)]
        [TestCase(5, 13)]
        [TestCase(5, 14)]
        [TestCase(5, 16)]
        [TestCase(5, 18)]
        [TestCase(5, 20)]
        [TestCase(5, 30)]
        [TestCase(5, 50)]
        [TestCase(6, 6)]
        [TestCase(6, 7)]
        [TestCase(6, 8)]
        [TestCase(6, 9)]
        [TestCase(6, 10)]
        [TestCase(6, 11)]
        [TestCase(6, 13)]
        [TestCase(6, 15)]
        [TestCase(6, 18)]
        [TestCase(6, 20)]
        [TestCase(6, 30)]
        [TestCase(6, 45)]
        [TestCase(7, 7)]
        [TestCase(7, 10)]
        [TestCase(7, 11)]
        [TestCase(7, 12)]
        [TestCase(7, 16)]
        [TestCase(7, 18)]
        [TestCase(7, 30)]
        [TestCase(7, 50)]
        [TestCase(8, 8)]
        [TestCase(8, 9)]
        [TestCase(8, 18)]
        [TestCase(8, 16)]
        [TestCase(9, 9)]
        [TestCase(9, 14)]
        [TestCase(9, 16)]
        [TestCase(9, 30)]
        [TestCase(10, 10)]
        [TestCase(10, 11)]
        [TestCase(10, 20)]
        [TestCase(10, 24)]
        [TestCase(10, 40)]
        [TestCase(10, 50)]
        [TestCase(10, 60)]
        [TestCase(10, 80)]
        [TestCase(10, 100)]
        [TestCase(11, 11)]
        [TestCase(11, 20)]
        [TestCase(11, 40)]
        [TestCase(12, 12)]
        [TestCase(12, 13)]
        [TestCase(12, 22)]
        [TestCase(12, 24)]
        [TestCase(12, 30)]
        [TestCase(13, 13)]
        [TestCase(14, 14)]
        [TestCase(14, 15)]
        [TestCase(15, 15)]
        [TestCase(15, 30)]
        [TestCase(15, 50)]
        [TestCase(15, 150)]
        [TestCase(16, 16)]
        [TestCase(16, 17)]
        [TestCase(17, 17)]
        [TestCase(18, 18)]
        [TestCase(18, 19)]
        [TestCase(18, 72)]
        [TestCase(19, 19)]
        [TestCase(20, 20)]
        [TestCase(20, 50)]
        [TestCase(20, 80)]
        [TestCase(20, 150)]
        [TestCase(20, 160)]
        [TestCase(20, 200)]
        [TestCase(21, 30)]
        [TestCase(21, 40)]
        [TestCase(30, 50)]
        [TestCase(30, 60)]
        [TestCase(30, 100)]
        [TestCase(30, 300)]
        [TestCase(40, 400)]
        [TestCase(45, 150)]
        [TestCase(70, 160)]
        [TestCase(100, 400)]
        public void RollCollection(int lower, int upper)
        {
            var rollCollection = RollHelper.GetRollCollection(lower, upper);
            Assert.That(rollCollection.Lower, Is.EqualTo(lower));
            Assert.That(rollCollection.Upper, Is.EqualTo(upper));
            Assert.That(rollCollection.Matches(lower, upper), Is.True);
        }
    }
}
